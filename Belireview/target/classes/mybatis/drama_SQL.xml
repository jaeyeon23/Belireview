<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC " - //mybatis.org//DTD Config 3.0//EN" " http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="drama">

  <select id="selectBoardList" parameterType="hashmap" resultType="hashmap" >
  <!-- 
 		SELECT
 			DRAMA_NO,
			DRAMA_NAME,
			DRAMA_DATE,
			DRAMA_CHANNEL,
			DRAMA_GENRE,
			DRAMA_DIRECTOR,
			DRAMA_CONTENT,
			DRAMA_READCOUNT,
			DRAMA_POSTER_IMAGE,
			DRAMA_MAIN_IMAGE,
			DRAMA_CONTENT_IMAGE,
			DRAMA_EPISODE,
			DRAMA_GRADE,
			RNUM FROM 
			( -->
		SELECT
				DRAMA_NO,
				DRAMA_NAME,
				to_char(DRAMA_DATE,'yyyy') as DRAMA_DATE,
				DRAMA_CHANNEL,
				DRAMA_GENRE,
				DRAMA_DIRECTOR,
				DRAMA_CONTENT,
				DRAMA_READCOUNT,
				DRAMA_POSTER_IMAGE,
				DRAMA_MAIN_IMAGE,
				DRAMA_CONTENT_IMAGE,
				DRAMA_EPISODE,
				DRAMA_GRADE,
				ROWNUM RNUM FROM 
				(SELECT *
					FROM DRAMA ORDER BY DRAMA_DATE DESC) ORDER BY RNUM ASC<!-- ) WHERE RNUM BETWEEN #{START} AND #{END} -->
		
   </select>
   
   <select id="totalDramaCount" parameterType="hashmap" resultType="int">
   		SELECT COUNT(*) AS COUNT FROM DRAMA
   </select>
   
   <select id="dramaDetail" parameterType="hashmap" resultType="hashmap">
	   	SELECT
	   		DRAMA_NO,
			DRAMA_NAME,
			TO_CHAR(DRAMA_DATE,'yyyy') AS DRAMA_DATE,
			DRAMA_CHANNEL,
			DRAMA_GENRE,
			DRAMA_DIRECTOR,
			DRAMA_CONTENT,
			DRAMA_READCOUNT,
			DRAMA_POSTER_IMAGE,
			DRAMA_MAIN_IMAGE,
			DRAMA_CONTENT_IMAGE,
			DRAMA_EPISODE,
			(SELECT ROUND(AVG(DL_GRADE),1)
			FROM DRAMA_LIKE WHERE DRAMA_LIKE_NO = #{DRAMA_NO} AND DL_GRADE != 0) 
			AS DRAMA_GRADE 
		FROM DRAMA WHERE DRAMA_NO = #{DRAMA_NO}
   </select>
 
   
   <select id="dramaActor" parameterType="hashmap" resultType="hashmap">
   		SELECT ACTOR_NAME,ACTOR_IMAGE FROM ACTOR WHERE ACTOR_DRAMA LIKE '%'||#{DRAMA_NAME}||'%'
   </select>
   
   <select id="detailgenre" parameterType="hashmap" resultType="hashmap" >
  <![CDATA[
	SELECT
 			DRAMA_NO,
			DRAMA_NAME,
			DRAMA_DATE,
			DRAMA_CHANNEL,
			DRAMA_GENRE,
			DRAMA_DIRECTOR,
			DRAMA_CONTENT,
			DRAMA_READCOUNT,
			DRAMA_POSTER_IMAGE,
			DRAMA_MAIN_IMAGE,
			DRAMA_CONTENT_IMAGE,
			DRAMA_EPISODE,
			DRAMA_GRADE,
			RNUM FROM 
			(
		SELECT
				DRAMA_NO,
				DRAMA_NAME,
				to_char(DRAMA_DATE,'yyyy') as DRAMA_DATE,
				DRAMA_CHANNEL,
				DRAMA_GENRE,
				DRAMA_DIRECTOR,
				DRAMA_CONTENT,
				DRAMA_READCOUNT,
				DRAMA_POSTER_IMAGE,
				DRAMA_MAIN_IMAGE,
				DRAMA_CONTENT_IMAGE,
				DRAMA_EPISODE,
				DRAMA_GRADE,
				ROWNUM RNUM FROM 
				(SELECT *
					FROM DRAMA WHERE DRAMA_NO != #{DRAMA_NO} and DRAMA_GENRE = #{DRAMA_GENRE} ORDER BY DRAMA_DATE DESC) ORDER BY RNUM ASC)WHERE RNUM BETWEEN 1 AND 4
		]]>
   </select>
   
   	<select id="existGrade" parameterType="hashmap" resultType="hashmap">
   		select * from drama_like where drama_like_no=#{DRAMA_NO} and id=#{ID}
	</select>
	
	<insert id="addGrade" parameterType="hashmap">
		insert into drama_like values(#{DRAMA_NO},#{ID},#{RATING})
	</insert>
	
	<delete id="updateGrade" parameterType="hashmap">
		update drama_like set dl_grade  =#{RATING} where drama_like_no=#{DRAMA_NO} and id=#{ID}		
	</delete>
	

	<!-- <select>
		SELECT * FROM DRAMA WHERE DRAMA_NO=#{DRAMA_NO}
	</select>
	
수정	
	<update>
	UPDATE DRAMA SET 
		DRAMA_NAME=#{DRAMA_NAME},
		DRAMA_DATE=#{DRAMA_DATE},
		DRAMA_CHANNEL=#{DRAMA_CHANNEL},
		DRAMA_GENRE=#{DRAMA_GENRE},
		DRAMA_DIRECTOR=#{DRAMA_DIRECTOR},
		DRAMA_CONTENT=#{DRAMA_CONTENT},
		DRAMA_POSTER_IMAGE=#{DRAMA_POSTER_IMAGE},
		DRAMA_MAIN_IMAGE=#{DRAMA_MAIN_IMAGE},
		DRAMA_CONTENT_IMAGE=#{CONTENT_IMAGE},
		DRAMA_EPISODE=#{EPISODE}
	WHERE DRAMA_NO=#{DRAMA_NO}	
	</update>

삭제
	<delete>
		DELETE DRAMA WHERE DRAMA_NO=#{DRAMA_NO}
	</delete> -->
	
	<select id="grade" parameterType="hashmap" resultType="int">
   		select count(*) from drama_like where drama_like_no=#{DRAMA_NO}
	</select>
	
	<select id="ratingPrediction" parameterType="hashmap" resultType="double">
		select round(avg(DL_GRADE),1) from drama_like where drama_like_no in (select drama_no from drama where drama_genre=#{DRAMA_GENRE}) and id=#{ID}
	</select>
	
	<select id="gradeRatio" parameterType="hashmap" resultType="hashmap">
		  with t as(		
		  		SELECT '0.5' GRADE, count(*) A FROM drama_like where DL_GRADE=0.5 and drama_like_no=#{DRAMA_NO} UNION ALL
		        SELECT '1' GRADE, count(*) A FROM drama_like where DL_GRADE=1 and drama_like_no=#{DRAMA_NO} UNION ALL
		        SELECT '1.5' GRADE, count(*) A FROM drama_like where DL_GRADE=1.5 and drama_like_no=#{DRAMA_NO} UNION ALL
		        SELECT '2' GRADE, count(*) A FROM drama_like where DL_GRADE=2 and drama_like_no=#{DRAMA_NO} UNION ALL
		        SELECT '2.5' GRADE, count(*) A FROM drama_like where DL_GRADE=2.5 and drama_like_no=#{DRAMA_NO} UNION ALL
		        SELECT '3' GRADE, count(*) A FROM drama_like where DL_GRADE=3 and drama_like_no=#{DRAMA_NO} UNION ALL
		        SELECT '3.5' GRADE, count(*) A FROM drama_like where DL_GRADE=3.5 and drama_like_no=#{DRAMA_NO} UNION ALL
		        SELECT '4' GRADE, count(*) A FROM drama_like where DL_GRADE=4 and drama_like_no=#{DRAMA_NO} UNION ALL
		        SELECT '4.5' GRADE, count(*) A FROM drama_like where DL_GRADE=4.5 and drama_like_no=#{DRAMA_NO} UNION ALL
		        SELECT '5' GRADE, count(*) A FROM drama_like where DL_GRADE=5 and drama_like_no=#{DRAMA_NO}
		  )
		  select 
		    decode(grouping(GRADE),1,'TOTAL',GRADE) as GRADE,
		    TO_CHAR(SUM(A) / SUM(CASE WHEN GROUPING(GRADE) = 0 THEN SUM(A) ELSE 0 END) OVER() * 100, '990.00') AS RATIO
		    FROM t
		GROUP BY ROLLUP(GRADE)
	</select>

</mapper>