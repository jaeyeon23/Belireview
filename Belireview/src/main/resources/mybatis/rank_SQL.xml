<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC " - //mybatis.org//DTD Config 3.0//EN" " http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="rank">
	<select id="selectMovieTotal" resultType="hashmap" parameterType="hashmap">
		SELECT
			MOVIE_NAME,
			MOVIE_NO,
			TO_CHAR(MOVIE_DATE,'yyyy-mm-dd') AS MOVIE_DATE,
			MOVIE_COUNTRY,
			MOVIE_GENRE,
			MOVIE_DIRECTOR,
			MOVIE_CONTENT,
			MOVIE_TOTAL_COUNT, 
			MOVIE_RUNNINGTIME,
			MOVIE_POSTER_IMAGE,
			MOVIE_MAIN_IMAGE,
			MOVIE_READCOUNT,
			TO_CHAR(MOVIE_GRADE,'0.9') AS MOVIE_GRADE,
			ROWNUM
		FROM
			(
			SELECT
				MOVIE_NAME,
				MOVIE_NO,
				MOVIE_DATE,
				MOVIE_COUNTRY,
				MOVIE_GENRE,
				MOVIE_DIRECTOR,
				MOVIE_CONTENT,
				MOVIE_TOTAL_COUNT, 
				MOVIE_RUNNINGTIME,
				MOVIE_POSTER_IMAGE,
				MOVIE_MAIN_IMAGE,
				MOVIE_READCOUNT,
				MOVIE_GRADE
			FROM
				MOVIE
			<if test='value != null'>
				<choose>
					<when test='value.equals("total")'>
						ORDER BY MOVIE_TOTAL_COUNT DESC
					</when> 
					<when test='value.equals("read")'>
						ORDER BY MOVIE_READCOUNT DESC
					</when>
					<when test='value.equals("grade")'>
						ORDER BY MOVIE_GRADE DESC
					</when>
				</choose>
			</if>
			)
		WHERE
			ROWNUM BETWEEN 1 AND 10
	</select>
	
	<select id="selectRank5" resultType="hashmap" parameterType="hashmap">
      SELECT
         SEARCH_TEXT,
         <if test="table_value != null">
            NO,
         </if>
         ROWNUM
      FROM
      (
         SELECT
            SEARCH_TEXT,
            C,
            NO
         FROM
            (
               SELECT 
                  SEARCH_TEXT, 
                  SUM(COUNT) AS C
                  <if test="table_value != null">
                     <choose>
                        <when test="table_value.equals('drama')">
                           ,DRAMA.DRAMA_NO AS NO, 
                           DRAMA.DRAMA_NAME   
                        </when>
                        <when test="table_value.equals('movie')">
                           ,MOVIE.MOVIE_NO AS NO,
                           MOVIE.MOVIE_NAME
                        </when>
                        <otherwise>
                           ,ACTOR.ACTOR_NO AS NO,
                           ACTOR.ACTOR_NAME
                        </otherwise>
                     </choose>
                  </if> 
               FROM
                  RANK
                  <if test="table_value != null">
                     , ${table_value}
                  </if>
               WHERE
                  SEARCH_DATE BETWEEN SYSDATE-7 AND SYSDATE 
                  <if test="table_value != null">
                     AND SEARCH_TABLE=#{table_value}
                     <choose>
                        <when test="table_value.equals('drama')">
                           AND   SEARCH_TEXT=DRAMA_NAME      
                        </when>
                        <when test="table_value.equals('movie')">
                           AND   SEARCH_TEXT=MOVIE_NAME
                        </when>
                        <otherwise>
                           AND   SEARCH_TEXT=ACTOR_NAME
                        </otherwise>
                     </choose>
                  </if>
               GROUP BY
                  SEARCH_TEXT
                  <if test="table_value != null">
                     <choose>
                        <when test="table_value.equals('drama')">
                           ,DRAMA.DRAMA_NO
                           ,DRAMA.DRAMA_NAME
                        </when>
                        <when test="table_value.equals('movie')">
                           ,MOVIE.MOVIE_NO
                           ,MOVIE.MOVIE_NAME
                        </when>
                        <otherwise>
                           ,ACTOR.ACTOR_NO
                           ,ACTOR.ACTOR_NAME
                        </otherwise>
                     </choose>
                  </if> 
            )
         ORDER BY
            C DESC
      )
      WHERE 
         ROWNUM BETWEEN 1 AND 10
   </select>
	
	<!-- 테이블 검사 -->
	<select id="selectDramaSearch" parameterType="hashmap" resultType="int">
		SELECT
			COUNT(*)
		FROM
			DRAMA
		WHERE
			DRAMA_NAME = #{searchText}
	</select>
	<select id="selectMovieSearch" parameterType="hashmap" resultType="int">
		SELECT
			COUNT(*)
		FROM
			MOVIE
		WHERE
			MOVIE_NAME = #{searchText}
	</select>
	<select id="selectActorSearch" parameterType="hashmap" resultType="int">
		SELECT
			COUNT(*)
		FROM
			ACTOR
		WHERE
			ACTOR_NAME = #{searchText}
	</select>
	
	<!-- 검색어 삽입 -->
	<insert id="insertSearchText" parameterType="hashmap">
		INSERT INTO 
		RANK
			(
				SEARCH_TEXT,
				COUNT,
				SEARCH_DATE
				<if test="table_value != null">
					, SEARCH_TABLE 
				</if>
			)
		VALUES
			(
				#{searchText},
				1,
				SYSDATE 
				<if test="table_value != null">
					, #{table_value, jdbcType=VARCHAR}
				</if>
			)
		
	</insert>
	
	<select id="selectCountSearchText" parameterType="hashmap" resultType="int">
		SELECT 
			COUNT(*) 
		FROM 
			RANK 
		WHERE 
			TO_CHAR(SEARCH_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD') and SEARCH_TEXT = #{searchText} 
	</select>
	
	<update id="updateSearchText" parameterType="hashmap">
		UPDATE
			RANK
		SET
			COUNT=COUNT+1
		WHERE
			TO_CHAR(SEARCH_DATE, 'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD') and SEARCH_TEXT = #{searchText}
	</update>
</mapper>